if [ -z "$RUST_SRC" ]; then
	echo "Rust Grep helper "
	export RUST_SRC as standard rust source tree to search
fi	
if [ ! "$1" ]; then
	echo "Rust Grep helper "
	echo "useage rg <search text> [unfold opts]"
	echo "searches for whole word following fn/struct/fn/trait/impl/type, and unfolds results"
	echo "optionally provide more options to unfold eg -Su singleline output"
	echo "searches *.rs in current location and $RUST_SRC recursively"
	echo "rg (struct|fn|trait|impl|enum|mod|type|for) Foo [unfold opts]-- search only for struct/fn/etc"

else
	if [ "$1" == "struct" ] || [ $1 == "fn" ] || [ $1 == "impl" ] || [ $1 == "trait" ] || [ $1 == "enum" ] || [ $1 == "mod" ] || [ $1 == "enum" ]  || [ $1 == "type" ] || [ $1 == "for" ]; then
		echo "search for $1 def only"
		grep -rn "\b$1\s*$2\b" . $RUST_SRC --include "*.rs" | unfold $3
	else
		if !( grep -rn "\(trait\|struct\|fn\|fn.*(.*:.*\|impl\|impl.*for\|type\|enum\|macro_rules!\)\s*$1\b" . $RUST_SRC --include "*.rs" | unfold $2 );then
             grep -rn "^\s$1\s*[,\n=(\{]" . $RUST_SRC --include "*.rs"
    	fi
	fi
#	grep -rn "\(^\s*\|\(trait\|struct\|fn\|impl\|type\|enum\|macro_rules!\)\)\s*$1[^a-zA-Z0-9_]" . $RUST_SRC --include "*.rs" | unfold $2


fi

